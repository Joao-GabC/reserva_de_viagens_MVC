@using System.Text.Json
@model AgenciaDeViagens.ViewModel.ReservarViewModel
@{
    ViewData["Title"] = "Home Page";
}

<div class="container">
    <h1>Pacotes</h1>
    <p>Desfrute dos nossos pacotes promocionais de viagem internacional por um preço camarada!</p>
    <hr />

    <form method="post">
        <div class="row">
            <div class="col d-flex justify-content-center my-2">
                <label class="me-2">Escolha a data desejada de embarque:</label>
                <input name="DataInicial" class="form-control" type="date" id="checkin"/>
            </div>
            <div class="col d-flex justify-content-center my-2">
                <label class="me-2">Escolha a data desejada de chegada:</label>
                <input name="DataFinal" class="form-control" type="date" id="checkout"/>
            </div>
        </div>
        <div class="row my-3">
            <button class="btn btn-primary" type="submit">Verificar disponibilidade</button>
        </div>
    </form>

    @{
        //uma row com 4 itens feita a cada 4 itens
        int pacotesCarreagados = 0;
    }
    @for (int limiteDe4 = 0; limiteDe4 != 5;)
    {
        <div class="row my-2">
        @foreach (var item in Model.Pacotes.Skip(pacotesCarreagados))
        {
            <div class="col d-flex p-0 mx-1">
				<div class="card">
					<img src="@item.ImagemUrl[0]" class="card-img-top">
					<div class="card-body d-flex flex-column justify-content-between">
						<div>
							<h5 class="card-title">@item.Titulo</h5>
							<p class="card-text">@item.Descricao</p>
						</div>
						<div>
							<hr />
							<div class="d-flex justify-content-between text-center">
								<p class="card-text text-success my-auto me-2"><span class="text-success h5">R$@item.PrecoPorNoite</span> por noite</p>
								<a asp-controller="Home" asp-action="Pacote" asp-route-id="@item.Id" class="btn btn-outline-success">Agendar Reserva</a>
							</div>
						</div>
					</div>
				</div>
            </div>
            
            pacotesCarreagados++;
            limiteDe4++;
            if(limiteDe4 == 4)
            {
                limiteDe4 = 0;
                break;
            }
        }
        </div>
        if(pacotesCarreagados == Model.Pacotes.Count) { limiteDe4 = 5; }
    }
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Inicializa o flatpickr para o check-in
        const checkin = flatpickr("#checkin", {
            dateFormat: "d-m-Y",
            minDate: "today",
            onChange: function (selectedDates, dateStr) {
                if (selectedDates.length > 0) {
                    const minCheckoutDate = new Date(selectedDates[0]);
                    minCheckoutDate.setDate(minCheckoutDate.getDate() + 1);
                    checkout.set("minDate", minCheckoutDate);
                }
            }
        });

        // Inicializa o flatpickr para o check-out
        const checkout = flatpickr("#checkout", {
            dateFormat: "d-m-Y",
            clickOpens: true,
            allowInput: true
        });
    });
</script>